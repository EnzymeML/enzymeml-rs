[package]
name = "enzymeml"
version = "0.1.3"
edition = "2021"
description = "The EnzymeML Rust library"
license = "MIT"
repository = "https://github.com/enzymeml/enzymeml-rs"
documentation = "https://docs.rs/enzymeml"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "enzymeml"
path = "src/bin/cli.rs"

[dependencies]
# Core dependencies
derive_builder = "0.20.0"
lazy_static = "1.5.0"
meval = { version = "0.2.0", features = ["serde"] }
schemars = "1.0.4"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.119"
thiserror = "2.0.9"
jsonschema = { version = "0.33.0", default-features = false }
itertools = "0.14.0"
regex = "1.11.1"
case = "1.0.0"
getrandom = { version = "0.2.16", features = ["js"] }
rand = "0.8"
bon = "3.6.3"
indicatif = "0.18.0"

# CLI and logging
clap = { version = "4.5.31", features = ["derive"] }
colored = "3.0.0"
tabled = "0.20.0"
env_logger = "0.11.8"
log = "0.4.27"

# Math and numerical
ndarray = "^0.15.6"
nalgebra = "0.33.2"
ordered-float = "5.0"
rayon = "1.10.0"
sha2 = "0.10.8"

# Visualization
plotly = "0.13.1"

# Feature: simulation
peroxide = { version = "0.40.0", optional = true }
evalexpr-jit = { version = "0.2.2", features = ["nalgebra"], optional = true }
splines = { version = "5.0.0", features = ["nalgebra"], optional = true }

# Feature: optimization
argmin = { version = "0.10.0", optional = true }
argmin-math = { version = "0.4.0", features = [
    "ndarray_latest-nolinalg",
], optional = true }
argmin-observer-slog = { version = "0.1.0", optional = true }
finitediff = { version = "0.1.4", features = ["ndarray"], optional = true }
egobox-ego = { version = "0.32.0", optional = true }

# Feature: tabular
polars = { version = "0.41", features = [
    "csv",
    "lazy",
], default-features = false, optional = true }
calamine = { version = "0.30.0", optional = true }
rust_xlsxwriter = { version = "0.90.0", optional = true }

# Feature: wasm
wasm-bindgen = { version = "0.2.92", optional = true }
serde-wasm-bindgen = { version = "0.6.5", optional = true }
tsify-next = { version = "0.5.5", optional = true }

# Feature: llm
mdmodels = { version = "0.2.4", optional = true }
tokio = { version = "1.44.0", features = ["full"], optional = true }
statrs = { version = "0.18.0", features = ["rand"] }
nuts-rs = "0.16.1"
crossbeam = "0.8.4"
variantly = "0.4.0"

# Feature: sbml
libsbml = { version = "0.1.1", optional = true }
quick-xml = { version = "0.38.0", features = [
    "serialize",
    "serde-types",
    "overlapped-lists",
], optional = true }
reqwest = { version = "0.12.23", features = ["blocking"] }

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
debug = false

[features]
default = ["optimization", "simulation", "llm", "tabular"]
tabular = ["polars", "calamine", "rust_xlsxwriter"]
wasm = ["wasm-bindgen", "serde-wasm-bindgen", "tsify-next"]
simulation = ["peroxide", "evalexpr-jit", "splines"]
llm = ["mdmodels", "tokio"]
sbml = ["libsbml", "quick-xml"]
optimization = [
    "argmin-math",
    "argmin",
    "finitediff",
    "egobox-ego",
    "argmin-observer-slog",
]
serde-wasm-bindgen = ["dep:serde-wasm-bindgen"]
tsify-next = ["dep:tsify-next"]
mdmodels = ["dep:mdmodels"]

[dev-dependencies]
approx = "0.5.1"
criterion = "0.7.0"
httpmock = "0.7.0"
insta = "1.43.1"
matrixcompare = "0.3.0"
pretty_assertions = "1.4.1"
tempfile = "3.20.0"
wasm-bindgen-test = "0.3.50"

[build-dependencies]
glob = "0.3.2"
md5 = "0.8.0"
prettyplease = "0.2.31"
syn = { version = "2.0.100", features = ["full", "parsing"] }
mdmodels = "0.2.4"

[[bench]]
name = "simulation"
harness = false
path = "benches/simulation.rs"

[lints.clippy]
result_large_err = "allow"

[package.metadata.vcpkg]
git = "https://github.com/microsoft/vcpkg"
rev = "ce613c41372b23b1f51333815feb3edd87ef8a8b"
dependencies = ["libsbml[core,expat,zlib,fbc]"]

[package.metadata.vcpkg.target]
x86_64-pc-windows-msvc = { dependencies = [
    "libsbml[core,expat,zlib,fbc]",
], triplet = "x64-windows-static-md" }

x86_64-pc-windows-gnu = { dependencies = [
    "libsbml[core,expat,zlib,fbc]",
], triplet = "x64-windows-static-md" }
